AWSTemplateFormatVersion: 2010-09-09
Description: >
  Resources needed to deploy a scheduled lambda function.
####################################################################################
Parameters:
####################################################################################

  LambdaRate:
    Description: >
      The rate (frequency) that determines when CloudWatch Events runs the rule that
      triggers the Lambda function.
    Default: rate(1 minute)
    AllowedValues:
      - rate(1 minute)
      - rate(10 minutes)
      - rate(60 minutes)
    Type: String

####################################################################################
Resources:
####################################################################################

  LambdaBasicExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: LambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: BasicExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchLogsStatement
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

  LambdaSchedule:
    Type: "AWS::Events::Rule"
    Properties:
      Description: >
        A schedule for the Lambda function..
      ScheduleExpression: !Ref LambdaRate
      State: ENABLED
      Targets:
        - Arn: !Sub ${LambdaFunction.Arn}
          Id: LambdaSchedule

  LambdaSchedulePermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Sub ${LambdaFunction.Arn}
      Principal: 'events.amazonaws.com'
      SourceArn: !Sub ${LambdaSchedule.Arn}

  LambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Description: >
        Lambda function that returns 'Hello World!'
      Code:
        ZipFile: |
          from __future__ import print_function
          def lambda_handler(event, context):
            print('Hello World!')
            return 'Hello World!'
      Handler: index.lambda_handler
      MemorySize: 128
      Role: !Sub ${LambdaBasicExecutionRole.Arn}
      Runtime: python3.6